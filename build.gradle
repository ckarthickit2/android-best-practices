// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
  apply from: "./dependencies.gradle"
  repositories {
    google()
    jcenter()
    mavenCentral()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "com.android.tools.build:gradle:$androidToolsVersion"
    //classpath "org.jlleitschuh.gradle:ktlint-gradle:8.2.0"
    //classpath "org.jmailen.gradle:kotlinter-gradle:2.1.0"
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:1.1.1"
    classpath "com.diffplug.spotless:spotless-plugin-gradle:3.28.1"
//    classpath "de.mannodermaus.gradle.plugins:android-junit5:1.5.0.0"
    classpath "com.vanniktech:gradle-android-junit-jacoco-plugin:0.16.0"
    classpath "io.realm:realm-gradle-plugin:5.13.0"
  }
}

apply plugin: "com.vanniktech.android.junit.jacoco"
junitJacoco {
  jacocoVersion = '0.8.2' // type String
  ignoreProjects = [] // type String array
  excludes // type String List
  includeNoLocationClasses = false // type boolean
  includeInstrumentationCoverageInMergedReport = false // type boolean
}
//Note:
//plugins {} DSL will work only if
// the plugin is part of Gradle Core Plugins  (org.gradle namespace)
// the plugin is part of Gradle Plugin Repositories  (https://plugins.gradle.org/)

allprojects {
  repositories {
    google()
    mavenCentral()
  }

}

def cleanTask = tasks.findByName("clean")
if (cleanTask != null) {
  cleanTask.doLast {
    delete rootProject.buildDir
  }
} else {
  //TODO: Figure out a way to enable the below logic
//  task clean(type: Delete) {
//    delete rootProject.buildDir
//  }
}

apply from: "./team-props/bikeshedding.gradle"
